/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cliente_v2;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;

/**
 *
 * @author Agustín Toya
 */
public class Menu extends javax.swing.JPanel {

    private ControladorCliente ctrl;

    /**
     * Creates new form panel1
     */
    public Menu(ControladorCliente controlador) {
        this.ctrl = controlador;
        String rutaArchivo = "C:/Users/Agustín Toya/Documents/NetBeansProjects/Lectores-Escritores/src/main/java/archivosPrueba/";
        ctrl.cargarArchivos(rutaArchivo);
        initComponents();

        ingresaNombreLabel.setVisible(false);
        ingresaNombreField.setVisible(false);
        selArchivo.setVisible(false);
        opcionesArchivos.setVisible(false);
        advertencia.setText("");

        cargarCombo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        ingresaNombreField = new javax.swing.JTextField();
        quieroEscribirButton = new javax.swing.JButton();
        quieroLeerButton = new javax.swing.JButton();
        opcionesArchivos = new javax.swing.JComboBox<>();
        selArchivo = new javax.swing.JLabel();
        ingresaNombreLabel = new javax.swing.JLabel();
        salir = new javax.swing.JButton();
        continuar = new javax.swing.JButton();
        advertencia = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("MENU");

        textPane.setEditable(false);
        textPane.setText("Seleccione \"Quiero leer\" para ver el contenido de un archivo contemplado dentro del programa. Si además de ver el contenido de un archivo, quiere editarlo o crear uno nuevo, ingrese \"Quiero escribir\". ");
        jScrollPane1.setViewportView(textPane);

        ingresaNombreField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaNombreFieldActionPerformed(evt);
            }
        });
        ingresaNombreField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ingresaNombreFieldKeyPressed(evt);
            }
        });

        quieroEscribirButton.setBackground(new java.awt.Color(78, 80, 222));
        quieroEscribirButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        quieroEscribirButton.setForeground(new java.awt.Color(20, 20, 20));
        quieroEscribirButton.setText("Quiero escribir");
        quieroEscribirButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quieroEscribirButtonMouseClicked(evt);
            }
        });
        quieroEscribirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quieroEscribirButtonActionPerformed(evt);
            }
        });
        quieroEscribirButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quieroEscribirButtonKeyPressed(evt);
            }
        });

        quieroLeerButton.setBackground(new java.awt.Color(120, 250, 150));
        quieroLeerButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        quieroLeerButton.setForeground(new java.awt.Color(20, 20, 20));
        quieroLeerButton.setText("Quiero leer");
        quieroLeerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quieroLeerButtonMouseClicked(evt);
            }
        });
        quieroLeerButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quieroLeerButtonKeyPressed(evt);
            }
        });

        opcionesArchivos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        opcionesArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionesArchivosActionPerformed(evt);
            }
        });

        selArchivo.setLabelFor(opcionesArchivos);
        selArchivo.setText("Selecciona un archivo");

        ingresaNombreLabel.setText("Ingresa el nombre del archivo a crear");

        salir.setBackground(new java.awt.Color(208, 80, 82));
        salir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        salir.setForeground(new java.awt.Color(0, 0, 0));
        salir.setText("Salir");
        salir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        salir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirMouseClicked(evt);
            }
        });
        salir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                salirKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                salirKeyReleased(evt);
            }
        });

        continuar.setBackground(new java.awt.Color(20, 180, 82));
        continuar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        continuar.setForeground(new java.awt.Color(0, 0, 0));
        continuar.setText("Continuar");
        continuar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        continuar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        continuar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continuarMouseClicked(evt);
            }
        });
        continuar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                continuarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                continuarKeyReleased(evt);
            }
        });

        advertencia.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        advertencia.setForeground(new java.awt.Color(200, 17, 17));
        advertencia.setText("___");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(quieroEscribirButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(advertencia)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selArchivo)
                            .addComponent(quieroLeerButton)
                            .addComponent(opcionesArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ingresaNombreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ingresaNombreField))
                            .addComponent(continuar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quieroLeerButton)
                    .addComponent(quieroEscribirButton))
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selArchivo)
                    .addComponent(ingresaNombreLabel))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opcionesArchivos)
                    .addComponent(ingresaNombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(advertencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salir)
                    .addComponent(continuar))
                .addGap(18, 18, 18))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        jPanel2.add(jPanel3, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void continuarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_continuarKeyReleased
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            try {
                enviarDatos();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ConfirmarCrearArchivo.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
    }//GEN-LAST:event_continuarKeyReleased

    private void continuarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_continuarKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            try {
                enviarDatos();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ConfirmarCrearArchivo.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
    }//GEN-LAST:event_continuarKeyPressed

    private void continuarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continuarMouseClicked
        try {
            enviarDatos();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ConfirmarCrearArchivo.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_continuarMouseClicked

    private void salirKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salirKeyReleased
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            ctrl.volverInicioSesion();
        }
    }//GEN-LAST:event_salirKeyReleased

    private void salirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salirKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            ctrl.volverInicioSesion();
        }
    }//GEN-LAST:event_salirKeyPressed

    private void salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirMouseClicked
        // TODO add your handling code here:
        ctrl.volverInicioSesion();
    }//GEN-LAST:event_salirMouseClicked

    private void opcionesArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionesArchivosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opcionesArchivosActionPerformed

    private void quieroLeerButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quieroLeerButtonKeyPressed
        // TODO add your handling code here:
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            quieroLeer();
        }
    }//GEN-LAST:event_quieroLeerButtonKeyPressed

    private void quieroLeerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quieroLeerButtonMouseClicked
        quieroLeer();
    }//GEN-LAST:event_quieroLeerButtonMouseClicked

    private void quieroEscribirButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quieroEscribirButtonKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            quieroEscribir();
        }
    }//GEN-LAST:event_quieroEscribirButtonKeyPressed

    private void quieroEscribirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quieroEscribirButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quieroEscribirButtonActionPerformed

    private void quieroEscribirButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quieroEscribirButtonMouseClicked
        quieroEscribir();
    }//GEN-LAST:event_quieroEscribirButtonMouseClicked

    private void ingresaNombreFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaNombreFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ingresaNombreFieldActionPerformed

    private void ingresaNombreFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombreFieldKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            if (!ingresaNombreField.getText().isBlank()) {
                try {
                    enviarDatos();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ConfirmarCrearArchivo.class.getName()).log(Level.SEVERE, null, ex);

                }
            }
        }

    }//GEN-LAST:event_ingresaNombreFieldKeyPressed

    private void enviarDatos() throws FileNotFoundException {
        String valorCombo = (String) opcionesArchivos.getSelectedItem();
        if (!(quiereLeer || quiereEscribir)) {
            advertencia.setText("Debe elegir una opción para poder continuar");
            ctrl.getPrincipal().pack();
        } else if (quiereLeer) {
            if (!valorCombo.equals("Ninguno")) {
                ctrl.irVentanaLectores(valorCombo);

            } else {
                advertencia.setText("Debe seleccionar un archivo al menos");
            }
        } else {
            String textoNombre = ingresaNombreField.getText();
            if (!textoNombre.isBlank() && !valorCombo.equals("Ninguno")) {
                // Acá se da la situación de que tiene elegido algo en el combo y escribió algo en el campo

                String nombreSeleccionar = opcionesArchivos.getSelectedItem().toString();
                String nombreCrear = formatear(textoNombre);

                ConfirmarCrearArchivo ventana1 = new ConfirmarCrearArchivo(ctrl.getPrincipal(), true, ctrl);
                ventana1.setInstrucciones(nombreSeleccionar, nombreCrear);
                ventana1.setVisible(true);
            } else if (!textoNombre.isBlank()) {
                String nombreCrear = formatear(textoNombre);
                ctrl.irVentanaEscitores(nombreCrear);
            } else if (!valorCombo.equals("Ninguno")) {
                ctrl.irVentanaEscitores(valorCombo);
            } else {
                advertencia.setText("Debe selecionar una opción o ingresar un nombre de archivo");
                ctrl.getPrincipal().pack();
            }

        }
    }

    private String formatear(String palabra) {
        String nombreCrear = palabra.replace('.', ' ');
        nombreCrear = nombreCrear.replace('/', '_');
        nombreCrear = nombreCrear.replace('\\', '_');
        return nombreCrear;
    }

    private void cargarCombo() {
        opcionesArchivos.removeAllItems();
        opcionesArchivos.addItem("Ninguno");
        for (String s : ctrl.getNombresArchivos()) {
            opcionesArchivos.addItem(s);
        }

        System.out.println(opcionesArchivos.getSelectedIndex());
        System.out.println(opcionesArchivos.getSelectedItem());

        hayArchivos = opcionesArchivos.getItemCount() != 0;

    }

    private void quieroLeer() {
        quiereLeer = true;
        quiereEscribir = false;
        selArchivo.setVisible(true);
        opcionesArchivos.setVisible(true);
        ingresaNombreField.setVisible(false);
        ingresaNombreLabel.setVisible(false);
        advertencia.setText("");
        ctrl.getPrincipal().pack();

    }

    private void quieroEscribir() {
        quiereEscribir = true;
        quiereLeer = false;
        selArchivo.setVisible(true);
        opcionesArchivos.setVisible(true);
        ingresaNombreField.setVisible(true);
        ingresaNombreLabel.setVisible(true);
        advertencia.setText("");
        ctrl.getPrincipal().pack();

    }

    public void actualizarCombo() {
        cargarCombo();
    }

    public void resetVentana() {
        opcionesArchivos.setSelectedIndex(0);
        quiereLeer = false;
        quiereEscribir = false;
        hayArchivos = false;
        ingresaNombreLabel.setVisible(false);
        ingresaNombreField.setVisible(false);
        selArchivo.setVisible(false);
        opcionesArchivos.setVisible(false);
        ingresaNombreField.setText("");
        advertencia.setText("");
    }

    private boolean quiereLeer = false;
    private boolean quiereEscribir = false;
    private boolean hayArchivos = false;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel advertencia;
    private javax.swing.JButton continuar;
    private javax.swing.JTextField ingresaNombreField;
    private javax.swing.JLabel ingresaNombreLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> opcionesArchivos;
    private javax.swing.JButton quieroEscribirButton;
    private javax.swing.JButton quieroLeerButton;
    private javax.swing.JButton salir;
    private javax.swing.JLabel selArchivo;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables
}
